# Copyright 2021, Proofcraft Pty Ltd
#
# SPDX-License-Identifier: BSD-2-Clause

# sel4test simulation runs
#
# See sel4test-sim/builds.yml in the repo seL4/ci-actions for configs.

name: seL4Test

on:
  push:
    branches: [master]
  pull_request:

# Cancel older runs of this workflow that are still not finished for the
# current PR. This reduces the CI load. For deployment to the master branch,
# the workflow will run on each push, but no cancellation happens here.
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || format('run-{0}', github.run_id) }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:

  the_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
    - id: matrix
      uses: seL4/ci-actions/sel4test-hw-matrix@master
    - env:
        json_steps_matrix: ${{ toJSON(steps.matrix) }}
        json_steps_matrix_outputs_matrix: ${{ toJSON(steps.matrix.outputs.matrix) }}
      run: |
        echo steps.matrix = ${json_steps_matrix}
        echo steps.matrix.outputs.matrix = ${json_steps_matrix_outputs_matrix}

# steps.matrix.outputs.matrix = {
#     "include": [
#         {"platform": "ODROID_C4", "march": "armv8a", "compiler": "gcc"},
#         {"platform": "ODROID_C4", "march": "armv8a", "compiler": "clang"},
#         {"platform": "ZYNQMP106", "march": "armv8a", "compiler": "gcc"},
#         {"platform": "ZYNQMP106", "march": "armv8a", "compiler": "clang"},
#         {"platform": "ZYNQMP", "march": "armv8a", "compiler": "gcc"},
#         {"platform": "ZYNQMP", "march": "armv8a", "compiler": "clang"},
#         {"platform": "TK1", "march": "armv7a", "compiler": "gcc"},
#         {"platform": "TK1", "march": "armv7a", "compiler": "clang"},
#         {"platform": "TX1", "march": "armv8a", "compiler": "gcc"},
#         {"platform": "TX1", "march": "armv8a", "compiler": "clang"},
#         {"platform": "TX2", "march": "armv8a", "compiler": "gcc"},
#         {"platform": "TX2", "march": "armv8a", "compiler": "clang"},
#         {"platform": "PC99", "march": "nehalem", "compiler": "gcc", "mode": 32},
#         {"platform": "PC99", "march": "nehalem", "compiler": "clang", "mode": 32},
#         {"platform": "PC99", "march": "nehalem", "compiler": "gcc", "mode": 64},
#         {"platform": "PC99", "march": "nehalem", "compiler": "clang", "mode": 64},
#         {"platform": "ODROID_XU4", "march": "armv7a", "compiler": "gcc"},
#         {"platform": "ODROID_XU4", "march": "armv7a", "compiler": "clang"},
#         {"platform": "IMX8MQ_EVK", "march": "armv8a", "compiler": "gcc"},
#         {"platform": "IMX8MQ_EVK", "march": "armv8a", "compiler": "clang"},
#         {"platform": "HIFIVE", "march": "rv64imac", "compiler": "gcc"},
#         {"platform": "HIFIVE", "march": "rv64imac", "compiler": "clang"},
#         {"platform": "SABRE", "march": "armv7a", "compiler": "gcc"},
#         {"platform": "SABRE", "march": "armv7a", "compiler": "clang"},
#         {"platform": "IMX8MM_EVK", "march": "armv8a", "compiler": "gcc"},
#         {"platform": "IMX8MM_EVK", "march": "armv8a", "compiler": "clang"},
#         {"platform": "TQMA8XQP1GB", "march": "armv8a", "compiler": "gcc"},
#         {"platform": "TQMA8XQP1GB", "march": "armv8a", "compiler": "clang"},
#         {"platform": "OMAP3", "march": "armv7a", "compiler": "gcc"},
#         {"platform": "OMAP3", "march": "armv7a", "compiler": "clang"},
#         {"platform": "ODROID_C2", "march": "armv8a", "compiler": "gcc"},
#         {"platform": "ODROID_C2", "march": "armv8a", "compiler": "clang"},
#         {"platform": "AM335X_BONEBLACK", "march": "armv8a", "compiler": "gcc"},
#         {"platform": "AM335X_BONEBLACK", "march": "armv8a", "compiler": "clang"}
#     ]
# }


#  simulation:
#    name: Simulation
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        march: [armv7a, armv8a, nehalem, rv32imac, rv64imac]
#        compiler: [gcc, clang]
#    steps:
#    - uses: seL4/ci-actions/sel4test-sim@master
#      with:
#        march: ${{ matrix.march }}
#        compiler: ${{ matrix.compiler }}
